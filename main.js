!function(){"use strict";var e=class{constructor(e,t,s){let{name:r,link:n}=e;this._name=r,this._link=n,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardElement.querySelector(".card__name").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}};class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_toggleButtonState(){this._hasInvalidInput(this._inputElements)?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal__close")&&this.close()}))}}class r extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputs=this._popupElement.querySelectorAll(".modal__input")}_getInputValues(){const e=Array.from(this._inputs),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}}class n{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}const o=document.querySelector("#profile-edit-button"),i=document.querySelector("#profile-edit-modal"),l=document.querySelector("#add-card-modal"),a=document.querySelector("#preview-image-modal"),c=(i.querySelector("#profile-modal-close"),l.querySelector("#add-card-modal-close"),a.querySelector("#preview-modal-close"),document.querySelector(".card__preview-image"),document.querySelector(".modal__preview-name"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-edit-form")),u=document.querySelector("#add-card-form"),d=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button")),_=document.querySelector("#profile-title-input"),h=document.querySelector("#profile-description-input"),m=(u.querySelector("#add-place-title-input"),u.querySelector("#add-place-url-input"),document.querySelectorAll(".modal__close"),l.querySelector("#add-modal-button"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"});let p;const E=new class{constructor(e){let{baseUrl:t,authToken:s}=e;this._baseUrl=t,this._authToken=s}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}updateUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{authorization:this._authToken}})}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}createCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:s})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",authToken:"8d021ea1-224c-4669-baf6-53caf4d7734b"});E.getInitialCards().then((e=>{p=new n({items:e,renderer:q},".cards__list"),p.renderItems()}));const S=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".card__preview-image"),this._caption=this._popupElement.querySelector(".modal__preview-name")}open(e){this._image.setAttribute("src",e.link),this._image.setAttribute("alt",e.name),this._caption.textContent=e.name,super.open()}}("#preview-image-modal");S.setEventListeners();const v=new r("#add-card-modal",(function(e){E.createCard().then((e=>{q(e)})),console.log(e),v.close(),k.disableButton()}));v.setEventListeners();const y=new r("#profile-edit-modal",(function(e){console.log(e),f.setUserInfo(e),y.close(),g.disableButton()}));y.setEventListeners();const f=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.description}}(".profile__title",".profile__description");function b(e){S.open(e)}function q(t){const s=new e(t,"#card-template",b).getView();p.addItems(s)}E.getUserInfo().then((e=>{f.setUserInfo({name:e.name,description:e.about})})),o.addEventListener("click",(()=>{const e=f.getUserInfo();console.log(e),_.value=e.name,h.value=e.description,y.open()})),d.addEventListener("click",(()=>v.open()));const g=new t(m,c),k=new t(m,u);g.enableValidation(),k.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,